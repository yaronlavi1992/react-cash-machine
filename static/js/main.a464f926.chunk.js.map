{"version":3,"sources":["reducers/productReducer.js","reducers/index.js","reducers/filteredProductReducer.js","reducers/purchaseReducer.js","reducers/inputReducer.js","reducers/selectProductReducer.js","components/products/ProductCreate.js","actions/index.js","components/products/ProductDelete.js","components/products/ProductEdit.js","components/products/ProductList.js","components/products/ProductShow.js","components/Purchase.js","components/Header.js","components/products/ProductAdd.js","components/App.js","index.js"],"names":["INITIAL_STATE","productId","productName","productPrice","combineReducers","products","state","action","type","payload","filteredProducts","filter","product","indexOf","input","purchases","selectedProduct","selectedId","form","formReducer","ProductCreate","renderError","error","touched","className","renderInput","label","meta","onSubmit","formValues","props","createProduct","this","handleSubmit","Field","name","component","React","Component","connect","Math","ceil","random","reduxForm","validate","errors","ProductDelete","ProductEdit","ProductList","renderList","map","key","ProductShow","Purchase","priceResults","productQuantity","reduce","a","b","style","paddingTop","length","to","Header","componentDidMount","filterProducts","selectProduct","initialize","onInputChange","event","inputChange","target","value","onPriceChange","change","productCreate","values","Number","onClick","onProductSelect","cursor","backgroundColor","disabled","addProduct","reset","history","push","onChange","e","withRouter","getProducts","App","marginTop","basename","process","path","exact","ProductAdd","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.a464f926.chunk.js","sourcesContent":["const INITIAL_STATE = [\r\n  { productId: '1', productName: 'tomato', productPrice: 14 },\r\n  { productId: '2', productName: 'cucumber', productPrice: 7 },\r\n  { productId: '3', productName: 'onion', productPrice: 9 },\r\n  { productId: '4', productName: 'carrot', productPrice: 11 },\r\n];\r\n\r\nexport const productReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'GET_PRODUCTS':\r\n      return state;\r\n\r\n    case 'CREATE_PRODUCT':\r\n      return [...state, action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { productReducer } from './productReducer';\r\nimport { purchaseReducer } from './purchaseReducer';\r\nimport { inputReducer } from './inputReducer';\r\nimport { selectProductReducer } from './selectProductReducer';\r\nimport { filteredProductsReducer } from './filteredProductReducer';\r\n\r\nexport default combineReducers({\r\n  products: productReducer,\r\n  filteredProducts: filteredProductsReducer,\r\n  purchases: purchaseReducer,\r\n  input: inputReducer,\r\n  selectedProduct: selectProductReducer,\r\n  form: formReducer,\r\n});\r\n","export const filteredProductsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'FILTER_PRODUCTS':\r\n      return action.payload.filter(\r\n        (product) => product.productName.indexOf(action.input) !== -1\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const purchaseReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PRODUCT':\r\n      return [...state, action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const inputReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const selectProductReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'SELECT_PRODUCT':\r\n      return action.payload.products.filter(\r\n        (product) => product.productId === action.payload.selectedId\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { createProduct } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ProductCreate extends React.Component {\r\n  renderError = ({ error, touched }) => {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    // console.log(formValues);\r\n    this.props.createProduct(formValues);\r\n    formValues.productName = '';\r\n    formValues.productPrice = '';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui three column centered grid\">\r\n        <div className=\"ui three column\">\r\n          <form\r\n            className=\"ui form error\"\r\n            onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n          >\r\n            <Field\r\n              name=\"productName\"\r\n              component={this.renderInput}\r\n              label=\"Product Name\"\r\n            />\r\n            <Field\r\n              name=\"productPrice\"\r\n              component={this.renderInput}\r\n              label=\"Product Price\"\r\n            />\r\n            <div className=\"ui three column centered grid\">\r\n              <div className=\"column\">\r\n                <button className=\"ui button primary\">Submit</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.productName) {\r\n    errors.productName = 'You must enter a product name';\r\n  }\r\n\r\n  if (!formValues.productPrice) {\r\n    errors.productPrice = 'You must enter a product price';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nProductCreate = connect(null, { createProduct })(ProductCreate);\r\n\r\nexport default reduxForm({\r\n  form: 'productCreate',\r\n  validate,\r\n})(ProductCreate);\r\n","export const getProducts = () => {\r\n  return {\r\n    type: 'GET_PRODUCTS',\r\n  };\r\n};\r\n\r\nexport const createProduct = ({ productName, productPrice }) => {\r\n  return {\r\n    type: 'CREATE_PRODUCT',\r\n    payload: {\r\n      productId: Math.ceil(Math.random() * 100),\r\n      productName,\r\n      productPrice,\r\n    },\r\n  };\r\n};\r\n\r\nexport const filterProducts = (products, input) => {\r\n  return {\r\n    type: 'FILTER_PRODUCTS',\r\n    payload: products,\r\n    input: input,\r\n  };\r\n};\r\n\r\nexport const inputChange = (input) => {\r\n  return {\r\n    type: 'INPUT_CHANGE',\r\n    payload: input,\r\n  };\r\n};\r\n\r\nexport const selectProduct = (products, productId) => {\r\n  return {\r\n    type: 'SELECT_PRODUCT',\r\n    payload: { products, selectedId: productId },\r\n  };\r\n};\r\n\r\nexport const addProduct = ({ productName, productPrice, productQuantity }) => {\r\n  return {\r\n    type: 'ADD_PRODUCT',\r\n    payload: {\r\n      productId: Math.ceil(Math.random() * 100),\r\n      productName,\r\n      productPrice,\r\n      productQuantity,\r\n    },\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nclass ProductDelete extends React.Component {\r\n  render() {\r\n    return <div>ProductDelete</div>;\r\n  }\r\n}\r\n\r\nexport default ProductDelete;\r\n","import React from 'react';\r\n\r\nclass ProductEdit extends React.Component {\r\n  render() {\r\n    return <div>ProductEdit</div>;\r\n  }\r\n}\r\n\r\nexport default ProductEdit;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProductList extends React.Component {\r\n  renderList = () => {\r\n    return this.props.products.map(\r\n      ({ productName, productId, productPrice }) => {\r\n        return (\r\n          <div className=\"item\" key={productId}>\r\n            <div className=\"content\">\r\n              <h1 className=\"header\">{productName}</h1>\r\n              <div className=\"description\">\r\n                <p>{`id: ${productId} price: ${productPrice}`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { products: state.products };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ProductList);\r\n","import React from 'react';\r\n\r\nclass ProductShow extends React.Component {\r\n  render() {\r\n    return <div>ProductShow</div>;\r\n  }\r\n}\r\n\r\nexport default ProductShow;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Purchase extends React.Component {\r\n\r\n  renderList = () => {\r\n    let priceResults = this.props.purchases.map(\r\n      ({ productPrice, productQuantity }) => productPrice * productQuantity\r\n    )\r\n\r\n    priceResults = priceResults.reduce((a,b) => a + b, 0);\r\n\r\n    return [\r\n      this.props.purchases.map(\r\n        ({ productId, productName, productPrice, productQuantity }) => {\r\n          return (\r\n            <div className=\"item\" key={productId}>\r\n              <div className=\"content\">\r\n                <h1 className=\"header\">{productName}</h1>\r\n                <div className=\"description\">\r\n                  <p>{`Quantity: ${productQuantity} Price: ${productPrice}`}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      ),\r\n      <div>\r\n        <h2>{`Total price: ${priceResults}`}</h2>\r\n      </div>,\r\n    ];\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui three column centered grid\"\r\n        style={{ paddingTop: '10px' }}\r\n      >\r\n        <div className=\"ui relaxed divided list\">\r\n          {this.props.purchases.length > 0\r\n            ? this.renderList()\r\n            : 'Nothing to show'}\r\n          <div>\r\n            <Link to=\"/products/add\">\r\n              <button className=\"ui button green\">Add Products</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    purchases: state.purchases,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Purchase);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui menu\">\r\n      <Link to=\"/\">\r\n        <div className=\"header item\">Home</div>\r\n      </Link>\r\n      <Link className=\"item\" to=\"/products/list\">\r\n        All Products\r\n      </Link>\r\n      <Link className=\"item\" to=\"/products/new\">\r\n        New Product\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  getProducts,\r\n  filterProducts,\r\n  inputChange,\r\n  selectProduct,\r\n  addProduct,\r\n} from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ProductCreate extends React.Component {\r\n\r\n  componentDidMount = () => {\r\n    this.props.filterProducts(this.props.products, '');\r\n    this.props.selectProduct(this.props.products, null);\r\n    this.props.initialize({productQuantity: \"1\"})\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    this.props.inputChange(event.target.value);\r\n    this.props.filterProducts(this.props.products, event.target.value);\r\n  };\r\n\r\n  onPriceChange = (event) => {\r\n    // console.log(this.props.form.productCreate.values);\r\n      this.props.change(\r\n        'productCalculatedPrice',\r\n        this.props.form.productCreate.values.productPrice *\r\n        Number(event.target.value)\r\n      );\r\n  };\r\n\r\n  renderList = () => {\r\n    return this.props.filteredProducts.map(\r\n      ({ productName, productId, productPrice }) => {\r\n        return (\r\n          <div\r\n            className=\"item\"\r\n            key={productId}\r\n            onClick={() => this.onProductSelect(productId)}\r\n            style={{\r\n              cursor: 'pointer',\r\n              backgroundColor:\r\n                this.props.selectedProduct.length > 0\r\n                  ? this.props.selectedProduct[0].productId === productId\r\n                    ? 'green'\r\n                    : ''\r\n                  : '',\r\n            }}\r\n          >\r\n            <div className=\"content\">\r\n              <h1 className=\"header\">{productName}</h1>\r\n              <div className=\"description\">\r\n                <p>{`id: ${productId} price: ${productPrice}`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  renderError = ({ error, touched }) => {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderInput = ({ input, label, meta, disabled }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} disabled={disabled} />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onProductSelect = async (productId) => {\r\n    // console.log(this.props.selectedProduct);\r\n    await this.props.selectProduct(this.props.products, productId);\r\n    if (this.props.selectedProduct.length > 0) {\r\n      this.props.change(\r\n        'productName',\r\n        this.props.selectedProduct[0].productName\r\n      );\r\n      this.props.change(\r\n        'productPrice',\r\n        this.props.selectedProduct[0].productPrice\r\n      );\r\n      // TODO: fix this\r\n      this.props.change(\r\n        'productCalculatedPrice',\r\n        this.props.selectedProduct[0].productPrice *\r\n        this.props.form.productCreate.values.productQuantity\r\n      );\r\n    }\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.addProduct(formValues);\r\n    this.props.reset();\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui centered grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"five wide column\">\r\n            <form\r\n              className=\"ui form error\"\r\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n            >\r\n              <Field\r\n                name=\"productName\"\r\n                component={this.renderInput}\r\n                label=\"Product Name\"\r\n                onChange={this.onInputChange}\r\n              />\r\n              <Field\r\n                name=\"productPrice\"\r\n                component={this.renderInput}\r\n                label=\"Product Price\"\r\n                onChange={(e) => this.onPriceChange(e)}\r\n              />\r\n              <Field\r\n                name=\"productQuantity\"\r\n                component={this.renderInput}\r\n                label=\"Product Quantity\"\r\n                onChange={(e) => this.onPriceChange(e)}\r\n              />\r\n              <Field\r\n                name=\"productCalculatedPrice\"\r\n                component={this.renderInput}\r\n                label=\"Calculated Price\"\r\n                props={{disabled: true}}\r\n              />\r\n              <div className=\"ui three column centered grid\">\r\n                <div className=\"column\">\r\n                  <button className=\"ui button primary\">Submit</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"eleven wide column\">\r\n            <h1 className=\"ui header centered\">Products</h1>\r\n            <div className=\"ui inverted segment\">\r\n              <div className=\"ui divided inverted relaxed list\">\r\n                {this.renderList()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.productName) {\r\n    errors.productName = 'You must enter a product name';\r\n  }\r\n\r\n  if (!formValues.productPrice) {\r\n    errors.productPrice = 'You must enter a product price';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filteredProducts: state.filteredProducts,\r\n    products: state.products,\r\n    selectedProduct: state.selectedProduct,\r\n    form: state.form,\r\n  };\r\n};\r\n\r\nProductCreate = withRouter(ProductCreate);\r\n\r\nProductCreate = connect(mapStateToProps, {\r\n  getProducts,\r\n  filterProducts,\r\n  inputChange,\r\n  selectProduct,\r\n  addProduct,\r\n})(ProductCreate);\r\n\r\nexport default reduxForm({\r\n  form: 'productCreate',\r\n  validate,\r\n})(ProductCreate);\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport ProductCreate from './products/ProductCreate';\r\nimport ProductDelete from './products/ProductDelete';\r\nimport ProductEdit from './products/ProductEdit';\r\nimport ProductList from './products/ProductList';\r\nimport ProductShow from './products/ProductShow';\r\nimport Purchase from './Purchase';\r\nimport Header from './Header';\r\nimport ProductAdd from './products/ProductAdd';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: '10px' }}>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n          <Header />\r\n          <Route path=\"/\" exact component={Purchase} />\r\n          <Route path=\"/products/add\" exact component={ProductAdd} />\r\n          <Route path=\"/products/new\" exact component={ProductCreate} />\r\n          <Route path=\"/products/list\" exact component={ProductList} />\r\n          <Route path=\"/products/delete\" exact component={ProductDelete} />\r\n          <Route path=\"/products/edit\" exact component={ProductEdit} />\r\n          <Route path=\"/products/show\" exact component={ProductShow} />\r\n        </BrowserRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './reducers';\r\nimport App from './components/App';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}