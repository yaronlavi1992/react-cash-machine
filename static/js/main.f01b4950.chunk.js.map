{"version":3,"sources":["reducers/productReducer.js","reducers/index.js","reducers/filteredProductReducer copy.js","reducers/purchaseReducer.js","reducers/inputReducer.js","reducers/selectProductReducer.js","components/products/ProductCreate.js","actions/index.js","components/products/ProductDelete.js","components/products/ProductEdit.js","components/products/ProductList.js","components/products/ProductShow.js","components/Purchase.js","components/Header.js","components/products/ProductAdd.js","components/App.js","index.js"],"names":["INITIAL_STATE","productId","productName","productPrice","combineReducers","products","state","action","type","payload","filteredProducts","filter","product","indexOf","input","purchases","selectedProduct","selectedId","form","formReducer","ProductCreate","renderError","error","touched","className","renderInput","label","meta","onSubmit","formValues","props","createProduct","this","handleSubmit","Field","name","component","React","Component","connect","Math","ceil","random","reduxForm","validate","errors","ProductDelete","ProductEdit","ProductList","renderList","map","key","ProductShow","Purchase","productQuantity","style","paddingTop","length","to","Header","componentDidMount","itemsPrice","filterProducts","selectProduct","onInputChange","event","inputChange","target","value","onPriceChange","onClick","onProductSelect","cursor","backgroundColor","addProduct","history","push","onChange","withRouter","getProducts","App","marginTop","path","process","exact","ProductAdd","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.f01b4950.chunk.js","sourcesContent":["const INITIAL_STATE = [\r\n  { productId: '1', productName: 'tomato', productPrice: 14 },\r\n  { productId: '2', productName: 'cucumber', productPrice: 7 },\r\n  { productId: '3', productName: 'onion', productPrice: 9 },\r\n  { productId: '4', productName: 'carrot', productPrice: 11 },\r\n];\r\n\r\nexport const productReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case 'GET_PRODUCTS':\r\n      return state;\r\n\r\n    case 'CREATE_PRODUCT':\r\n      return [...state, action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { productReducer } from './productReducer';\r\nimport { purchaseReducer } from './purchaseReducer';\r\nimport { inputReducer } from './inputReducer';\r\nimport { selectProductReducer } from './selectProductReducer';\r\nimport { filteredProductsReducer } from './filteredProductReducer copy';\r\n\r\nexport default combineReducers({\r\n  products: productReducer,\r\n  filteredProducts: filteredProductsReducer,\r\n  purchases: purchaseReducer,\r\n  input: inputReducer,\r\n  selectedProduct: selectProductReducer,\r\n  form: formReducer,\r\n});\r\n","export const filteredProductsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'FILTER_PRODUCTS':\r\n      return action.payload.filter(\r\n        (product) => product.productName.indexOf(action.input) !== -1\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const purchaseReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'ADD_PRODUCT':\r\n      return [...state, action.payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const inputReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const selectProductReducer = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'SELECT_PRODUCT':\r\n      return action.payload.products.filter(\r\n        (product) => product.productId === action.payload.selectedId\r\n      );\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { createProduct } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass ProductCreate extends React.Component {\r\n  renderError = ({ error, touched }) => {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    // console.log(formValues);\r\n    this.props.createProduct(formValues);\r\n    formValues.productName = '';\r\n    formValues.productPrice = '';\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui three column centered grid\">\r\n        <div className=\"ui three column\">\r\n          <form\r\n            className=\"ui form error\"\r\n            onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n          >\r\n            <Field\r\n              name=\"productName\"\r\n              component={this.renderInput}\r\n              label=\"Product Name\"\r\n            />\r\n            <Field\r\n              name=\"productPrice\"\r\n              component={this.renderInput}\r\n              label=\"Product Price\"\r\n            />\r\n            <div className=\"ui three column centered grid\">\r\n              <div className=\"column\">\r\n                <button className=\"ui button primary\">Submit</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.productName) {\r\n    errors.productName = 'You must enter a product name';\r\n  }\r\n\r\n  if (!formValues.productPrice) {\r\n    errors.productPrice = 'You must enter a product price';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nProductCreate = connect(null, { createProduct })(ProductCreate);\r\n\r\nexport default reduxForm({\r\n  form: 'productCreate',\r\n  validate,\r\n})(ProductCreate);\r\n","export const getProducts = () => {\r\n  return {\r\n    type: 'GET_PRODUCTS',\r\n  };\r\n};\r\n\r\nexport const createProduct = ({ productName, productPrice }) => {\r\n  return {\r\n    type: 'CREATE_PRODUCT',\r\n    payload: {\r\n      productId: Math.ceil(Math.random() * 100),\r\n      productName,\r\n      productPrice,\r\n    },\r\n  };\r\n};\r\n\r\nexport const filterProducts = (products, input) => {\r\n  return {\r\n    type: 'FILTER_PRODUCTS',\r\n    payload: products,\r\n    input: input,\r\n  };\r\n};\r\n\r\nexport const inputChange = (input) => {\r\n  return {\r\n    type: 'INPUT_CHANGE',\r\n    payload: input,\r\n  };\r\n};\r\n\r\nexport const selectProduct = (products, productId) => {\r\n  return {\r\n    type: 'SELECT_PRODUCT',\r\n    payload: { products, selectedId: productId },\r\n  };\r\n};\r\n\r\nexport const addProduct = ({ productName, productPrice, productQuantity }) => {\r\n  return {\r\n    type: 'ADD_PRODUCT',\r\n    payload: {\r\n      productId: Math.ceil(Math.random() * 100),\r\n      productName,\r\n      productPrice,\r\n      productQuantity,\r\n    },\r\n  };\r\n};\r\n","import React from 'react';\r\n\r\nclass ProductDelete extends React.Component {\r\n  render() {\r\n    return <div>ProductDelete</div>;\r\n  }\r\n}\r\n\r\nexport default ProductDelete;\r\n","import React from 'react';\r\n\r\nclass ProductEdit extends React.Component {\r\n  render() {\r\n    return <div>ProductEdit</div>;\r\n  }\r\n}\r\n\r\nexport default ProductEdit;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass ProductList extends React.Component {\r\n  renderList = () => {\r\n    return this.props.products.map(\r\n      ({ productName, productId, productPrice }) => {\r\n        return (\r\n          <div className=\"item\" key={productId}>\r\n            <div className=\"content\">\r\n              <h1 className=\"header\">{productName}</h1>\r\n              <div className=\"description\">\r\n                <p>{`id: ${productId} price: ${productPrice}`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div className=\"ui relaxed divided list\">{this.renderList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { products: state.products };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ProductList);\r\n","import React from 'react';\r\n\r\nclass ProductShow extends React.Component {\r\n  render() {\r\n    return <div>ProductShow</div>;\r\n  }\r\n}\r\n\r\nexport default ProductShow;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Purchase extends React.Component {\r\n  renderList = () => {\r\n    return [\r\n      this.props.purchases.map(\r\n        ({ productId, productName, productPrice, productQuantity }) => {\r\n          return (\r\n            <div className=\"item\" key={productId}>\r\n              <div className=\"content\">\r\n                <h1 className=\"header\">{productName}</h1>\r\n                <div className=\"description\">\r\n                  <p>{`Quantity: ${productQuantity} Price: ${productPrice}`}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        }\r\n      ),\r\n      <div>\r\n        <h2>{`Total price: ${this.props.purchases.map(\r\n          ({ productPrice, productQuantity }) => productPrice * productQuantity\r\n        )}`}</h2>\r\n      </div>,\r\n    ];\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className=\"ui three column centered grid\"\r\n        style={{ paddingTop: '10px' }}\r\n      >\r\n        <div className=\"ui relaxed divided list\">\r\n          {this.props.purchases.length > 0\r\n            ? this.renderList()\r\n            : 'Nothing to show'}\r\n          <div>\r\n            <Link to=\"/products/add\">\r\n              <button className=\"ui button green\">Add Products</button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    purchases: state.purchases,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Purchase);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui menu\">\r\n      <Link to=\"/\">\r\n        <div className=\"header item\">Home</div>\r\n      </Link>\r\n      <Link className=\"item\" to=\"/products/list\">\r\n        All Products\r\n      </Link>\r\n      <Link className=\"item\" to=\"/products/new\">\r\n        New Product\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport {\r\n  getProducts,\r\n  filterProducts,\r\n  inputChange,\r\n  selectProduct,\r\n  addProduct,\r\n} from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\r\n\r\nclass ProductCreate extends React.Component {\r\n  componentDidMount = () => {\r\n    this.itemsPrice = 0;\r\n    this.props.filterProducts(this.props.products, '');\r\n    this.props.selectProduct(this.props.products, null);\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    this.props.inputChange(event.target.value);\r\n    this.props.filterProducts(this.props.products, event.target.value);\r\n  };\r\n\r\n  onPriceChange = (formValues) => {\r\n    this.itemsPrice = formValues.productPrice * formValues.productQuantity;\r\n  };\r\n\r\n  renderList = () => {\r\n    return this.props.filteredProducts.map(\r\n      ({ productName, productId, productPrice }) => {\r\n        return (\r\n          <div\r\n            className=\"item\"\r\n            key={productId}\r\n            onClick={() => this.onProductSelect(productId)}\r\n            style={{\r\n              cursor: 'pointer',\r\n              backgroundColor:\r\n                this.props.selectedProduct.length > 0\r\n                  ? this.props.selectedProduct[0].productId === productId\r\n                    ? 'green'\r\n                    : ''\r\n                  : '',\r\n            }}\r\n          >\r\n            <div className=\"content\">\r\n              <h1 className=\"header\">{productName}</h1>\r\n              <div className=\"description\">\r\n                <p>{`id: ${productId} price: ${productPrice}`}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    );\r\n  };\r\n\r\n  renderError = ({ error, touched }) => {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n    return (\r\n      <div className={className}>\r\n        <label>{label}</label>\r\n        <input {...input} />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onProductSelect = (productId) => {\r\n    this.props.selectProduct(this.props.products, productId);\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    this.props.addProduct(formValues);\r\n    formValues.productName = '';\r\n    formValues.productPrice = '';\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ui centered grid\">\r\n        <div className=\"ui row\">\r\n          <div className=\"five wide column\">\r\n            <form\r\n              className=\"ui form error\"\r\n              onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n            >\r\n              <Field\r\n                name=\"productName\"\r\n                component={this.renderInput}\r\n                label=\"Product Name\"\r\n                onChange={this.onInputChange}\r\n              />\r\n              <Field\r\n                name=\"productPrice\"\r\n                component={this.renderInput}\r\n                label=\"Product Price\"\r\n                onChange={this.props.handleSubmit(this.onPriceChange)}\r\n              />\r\n              <Field\r\n                name=\"productQuantity\"\r\n                component={this.renderInput}\r\n                label=\"Product Quantity\"\r\n                onChange={this.props.handleSubmit(this.onPriceChange)}\r\n              />\r\n              <p>Calculated Price: {this.itemsPrice ? this.itemsPrice : 0}</p>\r\n              <div>{this.props.itemsPrice}</div>\r\n              <div className=\"ui three column centered grid\">\r\n                <div className=\"column\">\r\n                  <button className=\"ui button primary\">Submit</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div className=\"eleven wide column\">\r\n            <h1 className=\"ui header centered\">Products</h1>\r\n            <div className=\"ui inverted segment\">\r\n              <div className=\"ui divided inverted relaxed list\">\r\n                {this.renderList()}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.productName) {\r\n    errors.productName = 'You must enter a product name';\r\n  }\r\n\r\n  if (!formValues.productPrice) {\r\n    errors.productPrice = 'You must enter a product price';\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    filteredProducts: state.filteredProducts,\r\n    products: state.products,\r\n    selectedProduct: state.selectedProduct,\r\n  };\r\n};\r\n\r\nProductCreate = withRouter(ProductCreate);\r\n\r\nProductCreate = connect(mapStateToProps, {\r\n  getProducts,\r\n  filterProducts,\r\n  inputChange,\r\n  selectProduct,\r\n  addProduct,\r\n})(ProductCreate);\r\n\r\nexport default reduxForm({\r\n  form: 'productCreate',\r\n  validate,\r\n})(ProductCreate);\r\n","import React from 'react';\r\nimport { HashRouter, Route } from 'react-router-dom';\r\nimport ProductCreate from './products/ProductCreate';\r\nimport ProductDelete from './products/ProductDelete';\r\nimport ProductEdit from './products/ProductEdit';\r\nimport ProductList from './products/ProductList';\r\nimport ProductShow from './products/ProductShow';\r\nimport Purchase from './Purchase';\r\nimport Header from './Header';\r\nimport ProductAdd from './products/ProductAdd';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ui container\" style={{ marginTop: '10px' }}>\r\n        <HashRouter>\r\n          <Header />\r\n          <Route\r\n            path={process.env.PUBLIC_URL + '/#/'}\r\n            exact\r\n            component={Purchase}\r\n          />\r\n          <Route path=\"/products/add\" exact component={ProductAdd} />\r\n          <Route path=\"/products/new\" exact component={ProductCreate} />\r\n          <Route path=\"/products/list\" exact component={ProductList} />\r\n          <Route path=\"/products/delete\" exact component={ProductDelete} />\r\n          <Route path=\"/products/edit\" exact component={ProductEdit} />\r\n          <Route path=\"/products/show\" exact component={ProductShow} />\r\n        </HashRouter>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reducers from './reducers';\r\nimport App from './components/App';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}